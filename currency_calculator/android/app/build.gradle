def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

// keystoreを読み取るために必要
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('../release/key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 31

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.paigu.currencyConverter"
        minSdkVersion 21
        targetSdkVersion 31
        // minSdkVersion 21以上で必要
        multiDexEnabled true
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            ndk {
                debugSymbolLevel 'SYMBOL_TABLE'
            }
        }
    }
    flavorDimensions "default"
    productFlavors {
        stub {
            dimension "default"
            applicationIdSuffix ".stub"
            resValue "string", "app_name", "為替レート計算-stub(" + flutterVersionName + ")"
            resValue "string", "gms_application_id", "ca-app-pub-3940256099942544~3347511713"
            versionNameSuffix ".stub"
        }
        production {
            dimension "default"
            resValue "string", "app_name", "為替レート計算"
            resValue "string", "gms_application_id", keystoreProperties['gms_application_id']
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

tasks.whenTaskAdded { task ->
    if (task.name.startsWith("compileFlutterBuildProduction")) {
        println "Production task added: " + task.name
       task.dependsOn changeConfigForProduction
    }
    if (task.name.startsWith("compileFlutterBuildStubDebug")){
        println "Production task added: " + task.name
        task.dependsOn changeConfigForDebug
    }
}

task changeConfigForProduction {
  doFirst {
      println "changeConfigForProduction"
      copy {
          from '../../lib/env_config.dart_prod'
          into '../../lib'
          rename 'env_config.dart_prod', 'env_config.dart'
      }
  }
}

task changeConfigForDebug {
    doFirst {
        println "changeConfigForDebug"
        copy {
            from '../../lib/env_config.dart_stub'
            into '../../lib'
            rename 'env_config.dart_stub', 'env_config.dart'
        }
    }
}